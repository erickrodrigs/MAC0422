d é em metros
30km/h = 1m/120ms , 60km/h = 2m/120ms, 90km/h = 3m=120ms
249 < d
5 < n <= 5*d

Do enunciado do EP...
- Os ciclistas largam em fila ordenados aleatoriamente com no máximo 5 ciclistas lado a lado em cada posição.
- Se a velocidade sorteada para um ciclista for de 30Km/h, todos os ciclistas que estiverem imediatamente atrás dele na mesma
linha que ele, devem pedalar a 30Km/h
- Ultrapassagens podem ser realizadas caso haja espaço em alguma pista mais externa
(ultrapassagens só podem ser realizadas usando as pistas externas) => VAI FICAR POR ULTIMO.
- (OK!) Considere ainda que nas 2 últimas voltas há a chance de 10% de 1 ciclista
aleatório qualquer e respeitando as regras de ultrapassagem, fazer essas 2 últimas voltas a 90Km/h (1m a
cada 40ms).
  -(OK!) A simulação do seu código deve simular a corrida em intervalos de 60ms até as duas últimas voltas. A partir das
duas últimas voltas, caso algum ciclista tenha sido sorteado para pedalar a 90Km/h, a simulação deve
passar a simular a corrida em intervalos de 20ms. 
- (OK!) Caso algum ciclista quebre, essa informação deve ser exibida na tela no momento exato em que ele quebrou.
A volta em que ele estava e o identificador dele devem ser informados.
- (OK!) Entretanto, se houverem apenas 5 ciclistas na prova, a probabilidade de quebra para todos deixa de existir. (IMPORTANTE!!!)
- Em casos onde mais de um ciclista passe pela linha de chegada na última posição
nas voltas de eliminação, o ciclista eliminado deve ser aleatoriamente sorteado dentre esses últimos.
- 


- (OK!) A saı́da do seu programa deve ser um relatório informando a cada volta completada, as posições de
todos os ciclistas naquela volta.
- (OK!) Ao término da corrida (depois que todos os ciclistas passarem pela linha
de chegada), o ranqueamento final de todos os ciclistas, e o instante de tempo que cada um cruzou a linha
de chegada pela última vez, também deve ser impresso na saı́da (considere que a simulação começa no
instante de tempo zero).
- (OK!) Ciclistas que quebrarem devem ser identificados nessa lista final como tendo
quebrado e, ao invés de mostrar as suas colocações, deve ser informada a volta em que eles quebraram.
- (OK!) Seu programa deve ainda permitir uma opção de debug que informa a cada 60ms (e 20ms nas duas
últimas voltas, caso alguém pedale a 90Km/h) o status de cada posição da pista, ou seja, o identificador
do(s) ciclista(s) naquela posição ou a informação de que não há nenhum ciclista ali.

- Sorteado com 90km, porém é eliminado imediatamente

- Tudo da pagina 3 do PDF (entrega!)


- (OK!) Botar um mutex no rand()


Mudar a função que printa o rank.

-Tirar o que ganhou não faz sentido, uma vez que está muito acima da hora e professor muda de regra toda hora

- Refatorar o código



